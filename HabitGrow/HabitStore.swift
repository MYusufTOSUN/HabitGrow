import SwiftUI
import Foundation

// MARK: - AlÄ±ÅŸkanlÄ±k Veri Deposu
class HabitStore: ObservableObject {
    @Published var habits: [Habit] = [] {
        // AlÄ±ÅŸkanlÄ±klar gÃ¼ncellendiÄŸinde UserDefaults'a kaydet
        didSet {
            saveHabits()
        }
    }
    
    private let userDefaultsKey = "habitStore"
    
    // AlÄ±ÅŸkanlÄ±klarÄ± yÃ¼kle
    init() {
        loadHabits()
    }
    
    // MARK: - Veri Ä°ÅŸlemleri
    
    /// Yeni bir alÄ±ÅŸkanlÄ±k ekler
    func addHabit(_ habit: Habit) {
        habits.append(habit)
    }
    
    /// Belirtilen index set'indeki alÄ±ÅŸkanlÄ±klarÄ± siler
    func deleteHabit(at offsets: IndexSet) {
        habits.remove(atOffsets: offsets)
    }
    
    /// Bir alÄ±ÅŸkanlÄ±ÄŸÄ±n tamamlandÄ± durumunu gÃ¼nceller
    func toggleCompletion(for habitID: UUID) {
        if let index = habits.firstIndex(where: { $0.id == habitID }) {
            habits[index].isCompleted.toggle()
        }
    }
    
    // MARK: - UserDefaults Entegrasyonu
    
    /// AlÄ±ÅŸkanlÄ±klarÄ± UserDefaults'tan yÃ¼kler
    private func loadHabits() {
        guard let data = UserDefaults.standard.data(forKey: userDefaultsKey) else {
            // EÄŸer veri yoksa, Ã¶rnek verileri yÃ¼kle
            self.habits = SampleHabits.habits
            return
        }
        
        do {
            let decoder = JSONDecoder()
            self.habits = try decoder.decode([Habit].self, from: data)
        } catch {
            print("ğŸš¨ AlÄ±ÅŸkanlÄ±klar yÃ¼klenirken hata oluÅŸtu: \(error.localizedDescription)")
            // Hata durumunda Ã¶rnek verileri yÃ¼kle
            self.habits = SampleHabits.habits
        }
    }
    
    /// AlÄ±ÅŸkanlÄ±klarÄ± UserDefaults'a JSON olarak kaydeder
    private func saveHabits() {
        do {
            let encoder = JSONEncoder()
            let data = try encoder.encode(habits)
            UserDefaults.standard.set(data, forKey: userDefaultsKey)
        } catch {
            print("ğŸš¨ AlÄ±ÅŸkanlÄ±klar kaydedilirken hata oluÅŸtu: \(error.localizedDescription)")
        }
    }
} 